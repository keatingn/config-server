name: Release

on:
  push:
    branches: [ main ]

env:
  JAVA_VERSION: '21'
  JAVA_DISTRO: 'temurin'
  MAVEN_VERSION: '3.9.9'
  MAVEN_ARGS: "--no-transfer-progress --batch-mode"

jobs:
  release:
    name: Release
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Configure build steps as you'd normally do

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          cache: maven

      # Need Maven 3.9.0+ to recognize MAVEN_ARGS.
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Post JARs to GitHub Packages

      - name: Prepare release
        run: |
          git config user.name "${{ github.event.head_commit.committer.name }}"
          git config user.email "${{ github.event.head_commit.committer.email }}"
          mvn --file pom.xml release:prepare

      - name: Preform release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          mvn --file pom.xml release:perform

      - name: Release
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
